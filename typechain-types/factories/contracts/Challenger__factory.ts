/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Challenger,
  ChallengerInterface,
} from "../../contracts/Challenger";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_ERA",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "challengeRound",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "plainAnswer",
        type: "string",
      },
    ],
    name: "ChallengeWinner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startingTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardERA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "challengeRound",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
    ],
    name: "NewChallenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ERA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activeChallenge",
    outputs: [
      {
        internalType: "uint256",
        name: "startingTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardERA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "hasWinner",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startingTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardERA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "answerHash",
        type: "bytes32",
      },
    ],
    name: "addChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "challengeRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "plainAnswer",
        type: "string",
      },
    ],
    name: "submit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a9a380380610a9a83398101604081905261002f916100b8565b61003f61003a610064565b610068565b600780546001600160a01b0319166001600160a01b03929092169190911790556100e6565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c9578081fd5b81516001600160a01b03811681146100df578182fd5b9392505050565b6109a5806100f56000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2d966ea1161005b578063a2d966ea146100e3578063d99a8dc3146100eb578063ecf999f9146100fe578063f2fde38b1461011157610088565b8063023ac6c71461008d57806323af01ce146100ab578063715018a6146100c45780638da5cb5b146100ce575b600080fd5b610095610124565b6040516100a29190610897565b60405180910390f35b6100b361012a565b6040516100a29594939291906108bb565b6100cc61013f565b005b6100d6610153565b6040516100a29190610662565b6100d6610162565b6100cc6100f936600461056b565b610171565b6100cc61010c366004610615565b610307565b6100cc61011f36600461051d565b610438565b60065481565b60015460025460035460045460055460ff1685565b610147610472565b61015160006104b1565b565b6000546001600160a01b031690565b6007546001600160a01b031681565b600454604051610185908390602001610646565b60405160208183030381529060405280519060200120146101c15760405162461bcd60e51b81526004016101b89061083a565b60405180910390fd5b60055460ff16156101e45760405162461bcd60e51b81526004016101b8906107dd565b60035460015442916101f5916108e0565b116102125760405162461bcd60e51b81526004016101b890610771565b60015442116102335760405162461bcd60e51b81526004016101b89061073a565b6005805460ff191660011790556007546002546040516323b872dd60e01b81526001600160a01b03909216916323b872dd916102759130913391600401610676565b602060405180830381600087803b15801561028f57600080fd5b505af11580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c7919061054b565b506006547f460d83cdda25d4ae446b4e09eca21ed11b7285f969fab1f8d2526fedf79ba48f33836040516102fc92919061069a565b60405180910390a250565b61030f610472565b6007546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061034390339030908890600401610676565b602060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610395919061054b565b50600680549060006103a683610928565b90915550506040805160a0810182528581526020810185905280820184905260608101839052600060809091015260018590556002849055600383905560048290556005805460ff1916905560065490517f7bd71f286df35774978e1f5a0fbf28d85ec020a8012ab2b8cfb2e874e002a8969061042a9087908790879087906108a0565b60405180910390a250505050565b610440610472565b6001600160a01b0381166104665760405162461bcd60e51b81526004016101b8906106dd565b61046f816104b1565b50565b61047a610519565b6001600160a01b031661048b610153565b6001600160a01b0316146101515760405162461bcd60e51b81526004016101b8906107a8565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b60006020828403121561052e578081fd5b81356001600160a01b0381168114610544578182fd5b9392505050565b60006020828403121561055c578081fd5b81518015158114610544578182fd5b60006020828403121561057c578081fd5b813567ffffffffffffffff80821115610593578283fd5b818401915084601f8301126105a6578283fd5b8135818111156105b8576105b8610959565b604051601f8201601f19908116603f011681019083821181831017156105e0576105e0610959565b816040528281528760208487010111156105f8578586fd5b826020860160208301379182016020019490945295945050505050565b6000806000806080858703121561062a578283fd5b5050823594602084013594506040840135936060013592509050565b600082516106588184602087016108f8565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03841682526040602083015282518060408401526106c88160608501602087016108f8565b601f01601f1916919091016060019392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526017908201527f4368616c6c656e6765204e6f7420537461727465643a28000000000000000000604082015260600190565b60208082526013908201527f4368616c6c656e676520457870697265643a2800000000000000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f4368616c6c656e676520416c726561647920536f6c76656420627920616e6f7460408201527f68657220486973746f7069613a28000000000000000000000000000000000000606082015260800190565b60208082526023908201527f57726f6e6720416e737765722c2054727920416761696e20486973746f70696160408201527f6e3a280000000000000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b93845260208401929092526040830152606082015260800190565b9485526020850193909352604084019190915260608301521515608082015260a00190565b600082198211156108f3576108f3610943565b500190565b60005b838110156109135781810151838201526020016108fb565b83811115610922576000848401525b50505050565b600060001982141561093c5761093c610943565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122000d704231196a811742a74a3abbfa677b309350827cf6c355dbaf3d5b3cbfab464736f6c63430008010033";

type ChallengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChallengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Challenger__factory extends ContractFactory {
  constructor(...args: ChallengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ERA: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Challenger> {
    return super.deploy(_ERA, overrides || {}) as Promise<Challenger>;
  }
  override getDeployTransaction(
    _ERA: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ERA, overrides || {});
  }
  override attach(address: string): Challenger {
    return super.attach(address) as Challenger;
  }
  override connect(signer: Signer): Challenger__factory {
    return super.connect(signer) as Challenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChallengerInterface {
    return new utils.Interface(_abi) as ChallengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Challenger {
    return new Contract(address, _abi, signerOrProvider) as Challenger;
  }
}
