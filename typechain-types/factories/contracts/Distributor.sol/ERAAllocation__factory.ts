/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERAAllocation,
  ERAAllocationInterface,
} from "../../../contracts/Distributor.sol/ERAAllocation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "shareHolders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "sharesPerSecond",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ERA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allocations",
    outputs: [
      {
        internalType: "uint256",
        name: "sharePerSecond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastWithdrawalTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawableAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOutstandingShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "shareholder",
        type: "address",
      },
    ],
    name: "getTotalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnlockedShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWithdrawnShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_ERA",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000b8038038062000b808339810160408190526200003491620001fa565b60006200004062000182565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060005b82518110156200015f576040518060600160405280838381518110620000c357634e487b7160e01b600052603260045260246000fd5b602002602001015181526020014381526020016000815250600560008584815181106200010057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050508080620001569062000348565b9150506200008d565b5042600281905562000176906303b538006200032d565b60035550620003929050565b3390565b600082601f83011262000197578081fd5b81516020620001b0620001aa8362000307565b620002d4565b8281528181019085830183850287018401881015620001cd578586fd5b855b85811015620001ed57815184529284019290840190600101620001cf565b5090979650505050505050565b600080604083850312156200020d578182fd5b82516001600160401b038082111562000224578384fd5b818501915085601f83011262000238578384fd5b815160206200024b620001aa8362000307565b82815281810190858301838502870184018b101562000268578889fd5b8896505b84871015620002a15780516001600160a01b03811681146200028c57898afd5b8352600196909601959183019183016200026c565b5091880151919650909350505080821115620002bb578283fd5b50620002ca8582860162000186565b9150509250929050565b604051601f8201601f191681016001600160401b0381118282101715620002ff57620002ff6200037c565b604052919050565b60006001600160401b038211156200032357620003236200037c565b5060209081020190565b6000821982111562000343576200034362000366565b500190565b60006000198214156200035f576200035f62000366565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6107de80620003a26000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806303c17172146100b457806314dba423146100c95780633197cbb6146100e757806352a9039c146100ef578063715018a61461011157806378e9792514610119578063864709e6146101215780638da5cb5b14610129578063a2d966ea1461013e578063c4d66de814610146578063de2b4e9814610159578063f20d863414610161578063f2fde38b14610174575b600080fd5b6100c76100c23660046105cc565b610187565b005b6100d1610284565b6040516100de91906106ed565b60405180910390f35b6100d16102da565b6101026100fd3660046105b0565b6102e0565b6040516100de939291906106f6565b6100c7610301565b6100d1610381565b6100d1610387565b6101316103c7565b6040516100de9190610617565b6101316103d6565b6100c76101543660046105b0565b6103e5565b6100d1610478565b6100d161016f3660046105b0565b610498565b6100c76101823660046105b0565b6104d3565b600060035442111561019c575060035461019f565b50425b3360009081526005602052604081206001810180549084905590916101cf6101c78584610581565b845490610594565b60028401549091506101e190826105a0565b600284018190556101f29086610581565b60028401556001546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990610229908990899060040161062b565b602060405180830381600087803b15801561024357600080fd5b505af1158015610257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027b91906105f7565b50505050505050565b60008060035443111561029a575060035461029d565b50435b336000908152600560205260409020600101546102ba9082610743565b336000908152600560205260409020546102d49190610724565b91505090565b60035481565b60056020526000908152604090208054600182015460029092015490919083565b6103096105ac565b6001600160a01b031661031a6103c7565b6001600160a01b0316146103495760405162461bcd60e51b8152600401610340906106b8565b60405180910390fd5b600080546040516001600160a01b0390911690600080516020610789833981519152908390a3600080546001600160a01b0319169055565b60025481565b6002543360009081526005602052604081206001015490916103a891610743565b336000908152600560205260409020546103c29190610724565b905090565b6000546001600160a01b031690565b6001546001600160a01b031681565b6103ed6105ac565b6001600160a01b03166103fe6103c7565b6001600160a01b0316146104245760405162461bcd60e51b8152600401610340906106b8565b60045460ff16156104475760405162461bcd60e51b81526004016103409061068a565b6004805460ff1916600190811790915580546001600160a01b039092166001600160a01b0319909216919091179055565b336000908152600560205260408120600101546003546103a89190610743565b60006002546003546104aa9190610743565b6001600160a01b0383166000908152600560205260409020546104cd9190610724565b92915050565b6104db6105ac565b6001600160a01b03166104ec6103c7565b6001600160a01b0316146105125760405162461bcd60e51b8152600401610340906106b8565b6001600160a01b0381166105385760405162461bcd60e51b815260040161034090610644565b600080546040516001600160a01b038085169392169160008051602061078983398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600061058d8284610743565b9392505050565b600061058d8284610724565b600061058d828461070c565b3390565b6000602082840312156105c1578081fd5b813561058d81610770565b600080604083850312156105de578081fd5b82356105e981610770565b946020939093013593505050565b600060208284031215610608578081fd5b8151801515811461058d578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526014908201527320b63932b0b23c9034b734ba34b0b634bd32b21760611b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b9283526020830191909152604082015260600190565b6000821982111561071f5761071f61075a565b500190565b600081600019048311821515161561073e5761073e61075a565b500290565b6000828210156107555761075561075a565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461078557600080fd5b5056fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220078444c525819d04819cd9cf896d0163f1e1f065eb1f02803779d412a633219364736f6c63430008010033";

type ERAAllocationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERAAllocationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERAAllocation__factory extends ContractFactory {
  constructor(...args: ERAAllocationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    shareHolders: PromiseOrValue<string>[],
    sharesPerSecond: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERAAllocation> {
    return super.deploy(
      shareHolders,
      sharesPerSecond,
      overrides || {}
    ) as Promise<ERAAllocation>;
  }
  override getDeployTransaction(
    shareHolders: PromiseOrValue<string>[],
    sharesPerSecond: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      shareHolders,
      sharesPerSecond,
      overrides || {}
    );
  }
  override attach(address: string): ERAAllocation {
    return super.attach(address) as ERAAllocation;
  }
  override connect(signer: Signer): ERAAllocation__factory {
    return super.connect(signer) as ERAAllocation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERAAllocationInterface {
    return new utils.Interface(_abi) as ERAAllocationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERAAllocation {
    return new Contract(address, _abi, signerOrProvider) as ERAAllocation;
  }
}
