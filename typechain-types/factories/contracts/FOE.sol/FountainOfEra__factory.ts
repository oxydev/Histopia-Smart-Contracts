/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FountainOfEra,
  FountainOfEraInterface,
} from "../../../contracts/FOE.sol/FountainOfEra";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_eraAllocatorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_histopiaNFT",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_eraPerBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "typeId",
        type: "uint256",
      },
    ],
    name: "addHistopianType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "properties",
        type: "uint256[]",
      },
    ],
    name: "calculateMilitaryPower",
    outputs: [
      {
        internalType: "uint256",
        name: "militaryPower",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "calculateMilitaryPowerOfTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTotalMilitaryPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "era",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eraAllocator",
    outputs: [
      {
        internalType: "contract Allocator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eraPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "generalAccEraPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTokenIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "histopianCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "histopianTypes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRewardBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract INFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingERA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "militaryPower",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIndices",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c4a38038062001c4a8339810160408190526200003491620001b1565b62000048620000426200011c565b62000120565b600280546001600160a01b0319166001600160a01b038581169190911791829055600483815560408051631a205bc560e31b81529051939092169263d102de289280830192602092918290030181600087803b158015620000a857600080fd5b505af1158015620000bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e391906200018d565b600380546001600160a01b039283166001600160a01b031991821617909155600180549490921693169290921790915550620001f19050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018857600080fd5b919050565b6000602082840312156200019f578081fd5b620001aa8262000170565b9392505050565b600080600060608486031215620001c6578182fd5b620001d18462000170565b9250620001e16020850162000170565b9150604084015190509250925092565b611a4980620002016000396000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c80638dbb1e3a116100ee578063cdf5aa4511610097578063d56d229d11610071578063d56d229d1461030b578063db2e21bc14610313578063e3161ddd1461031b578063f2fde38b14610323576101a3565b8063cdf5aa45146102d0578063ce28135e146102d8578063d004b036146102eb576101a3565b8063983d95ce116100c8578063983d95ce146102a2578063a9f8d181146102b5578063b80224be146102bd576101a3565b80638dbb1e3a1461026957806392846b8a1461027c578063978dcfa01461028f576101a3565b80635b1d781311610150578063806b984f1161012a578063806b984f1461025157806386aeab5b146102595780638da5cb5b14610261576101a3565b80635b1d781314610239578063715018a61461024157806379a1ecd014610249576101a3565b806340de5fe21161018157806340de5fe2146101fc5780634641257d1461021c578063598b8e7114610226576101a3565b806305de54c9146101a8578063143e55e0146101c65780631959a002146101db575b600080fd5b6101b0610336565b6040516101bd91906118db565b60405180910390f35b6101ce61033c565b6040516101bd91906116af565b6101ee6101e936600461148f565b61034b565b6040516101bd9291906118e4565b61020f61020a36600461165e565b610364565b6040516101bd91906117d2565b610224610379565b005b6102246102343660046114b6565b6103fa565b6101ce61071b565b61022461072a565b6101b061073e565b6101b0610744565b6101b061074a565b6101ce610750565b6101b061027736600461168e565b61075f565b61022461028a36600461165e565b610772565b6101b061029d366004611525565b610795565b6102246102b03660046114b6565b6107ef565b6101b0610d80565b6101b06102cb36600461165e565b610d86565b6101b0610e30565b6101b06102e636600461148f565b610e36565b6102fe6102f936600461148f565b610eea565b6040516101bd9190611753565b6101ce610f59565b610224610f68565b6102246110c7565b61022461033136600461148f565b6111bf565b60095481565b6003546001600160a01b031681565b600a602052600090815260409020805460019091015482565b600b6020526000908152604090205460ff1681565b336000908152600a602052604090206103906110c7565b6000816001015464e8d4a5100060065484600001546103af919061197f565b6103b9919061195f565b6103c3919061199e565b90506103cf33826111f9565b600654825464e8d4a51000916103e49161197f565b6103ee919061195f565b82600101819055505050565b336000908152600a602052604090206104116110c7565b805415610459576000816001015464e8d4a510006006548460000154610437919061197f565b610441919061195f565b61044b919061199e565b905061045733826111f9565b505b828290506009600082825461046e9190611947565b9091555060009050805b8381101561068257600154600b906000906001600160a01b0316630d5242948888868181106104b757634e487b7160e01b600052603260045260246000fd5b905060200201356040518263ffffffff1660e01b81526004016104da91906118db565b602060405180830381600087803b1580156104f457600080fd5b505af1158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190611676565b815260208101919091526040016000205460ff166105655760405162461bcd60e51b815260040161055c906118a6565b60405180910390fd5b6001546001600160a01b03166323b872dd333088888681811061059857634e487b7160e01b600052603260045260246000fd5b905060200201356040518463ffffffff1660e01b81526004016105bd939291906116c3565b600060405180830381600087803b1580156105d757600080fd5b505af11580156105eb573d6000803e3d6000fd5b5050505061061e85858381811061061257634e487b7160e01b600052603260045260246000fd5b90506020020135610d86565b6106289083611947565b91508260020185858381811061064e57634e487b7160e01b600052603260045260246000fd5b835460018101855560009485526020948590209190940292909201359190920155508061067a816119cc565b915050610478565b50808260000160008282546106979190611947565b9250508190555080600860008282546106b09190611947565b9091555050600654825464e8d4a51000916106ca9161197f565b6106d4919061195f565b600183015560405133907fff409334d2645d660e7cfa41a637aa21f45a79ecb9660a6931aa923bf75577c79061070d9087908790611700565b60405180910390a250505050565b6002546001600160a01b031681565b6107326113b2565b61073c60006113f1565b565b60085481565b60075481565b60065481565b6000546001600160a01b031690565b600061076b838361199e565b9392505050565b61077a6113b2565b6000908152600b60205260409020805460ff19166001179055565b6000805b82518110156107e9578281815181106107c257634e487b7160e01b600052603260045260246000fd5b6020026020010151826107d59190611947565b9150806107e1816119cc565b915050610799565b50919050565b336000908152600a602052604090206108066110c7565b6000816001015464e8d4a510006006548460000154610825919061197f565b61082f919061195f565b610839919061199e565b905061084533826111f9565b838390506009600082825461085a919061199e565b9091555060009050805b84811015610ac857600284015486868381811061089157634e487b7160e01b600052603260045260246000fd5b90506020020135106108b55760405162461bcd60e51b815260040161055c906117dd565b337f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364600286018888858181106108fb57634e487b7160e01b600052603260045260246000fd5b905060200201358154811061092057634e487b7160e01b600052603260045260246000fd5b906000526020600020015460405161093891906118db565b60405180910390a26001546001600160a01b03166323b872dd3033600288018a8a8781811061097757634e487b7160e01b600052603260045260246000fd5b905060200201358154811061099c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001546040518463ffffffff1660e01b81526004016109c5939291906116c3565b600060405180830381600087803b1580156109df57600080fd5b505af11580156109f3573d6000803e3d6000fd5b50505050610a5384600201878784818110610a1e57634e487b7160e01b600052603260045260246000fd5b9050602002013581548110610a4357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154610d86565b610a5d9083611947565b9150600084600201878784818110610a8557634e487b7160e01b600052603260045260246000fd5b9050602002013581548110610aaa57634e487b7160e01b600052603260045260246000fd5b60009182526020909120015580610ac0816119cc565b915050610864565b5080836000016000828254610add919061199e565b925050819055508060086000828254610af6919061199e565b909155508490505b8015610d51576000610b1160018361199e565b6002860154909150610b259060019061199e565b878783818110610b4557634e487b7160e01b600052603260045260246000fd5b905060200201351415610b8e5784600201805480610b7357634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055610d3e565b6002850154610b9f9060019061199e565b878783818110610bbf57634e487b7160e01b600052603260045260246000fd5b905060200201351015610d3e5760028501805460009190610be29060019061199e565b81548110610c0057634e487b7160e01b600052603260045260246000fd5b906000526020600020015490505b80158015610c1f5750600286015415155b15610c9f5785600201805480610c4557634e487b7160e01b600052603160045260246000fd5b600082815260208120820160001990810191909155019055600286018054610c6f9060019061199e565b81548110610c8d57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050610c0e565b6002860154610caf575050610d51565b8086600201898985818110610cd457634e487b7160e01b600052603260045260246000fd5b9050602002013581548110610cf957634e487b7160e01b600052603260045260246000fd5b60009182526020909120015560028601805480610d2657634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055505b5080610d49816119b5565b915050610afe565b50600654835464e8d4a5100091610d679161197f565b610d71919061195f565b83600101819055505050505050565b60055481565b6001546040517fa3f61b31000000000000000000000000000000000000000000000000000000008152600091610e2a916001600160a01b039091169063a3f61b3190610dd69086906004016118db565b60006040518083038186803b158015610dee57600080fd5b505afa158015610e02573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261029d91908101906115ba565b92915050565b60045481565b6001600160a01b0381166000908152600a6020526040812060065460085460055443118015610e6457508015155b15610eb4576000610e776005544361075f565b9050600060045482610e89919061197f565b905082610e9b8264e8d4a5100061197f565b610ea5919061195f565b610eaf9085611947565b935050505b6001830154835464e8d4a5100090610ecd90859061197f565b610ed7919061195f565b610ee1919061199e565b95945050505050565b6001600160a01b0381166000908152600a6020908152604091829020600201805483518184028101840190945280845260609392830182828015610f4d57602002820191906000526020600020905b815481526020019060010190808311610f39575b50505050509050919050565b6001546001600160a01b031681565b336000908152600a60205260408120905b6002820154811015611031576001546002830180546001600160a01b03909216916323b872dd91309133919086908110610fc357634e487b7160e01b600052603260045260246000fd5b90600052602060002001546040518463ffffffff1660e01b8152600401610fec939291906116c3565b600060405180830381600087803b15801561100657600080fd5b505af115801561101a573d6000803e3d6000fd5b505050508080611029906119cc565b915050610f79565b50336001600160a01b03167f1ad6082f7aa3e32095e38fd4c0bf76fa2bb7584e81474cf3519d2dea4081181c8260020160405161106e9190611797565b60405180910390a260028101546009805460009061108d90849061199e565b909155506110a1905060028201600061145d565b8054600880546000906110b590849061199e565b90915550506000600182018190559055565b60055443116110d55761073c565b6008546110e5574360055561073c565b60006110f36005544361075f565b9050600060045482611105919061197f565b6002546040517f03c171720000000000000000000000000000000000000000000000000000000081529192506001600160a01b0316906303c171729061115190309085906004016116e7565b600060405180830381600087803b15801561116b57600080fd5b505af115801561117f573d6000803e3d6000fd5b505050506008548164e8d4a51000611197919061197f565b6111a1919061195f565b600660008282546111b29190611947565b9091555050436005555050565b6111c76113b2565b6001600160a01b0381166111ed5760405162461bcd60e51b815260040161055c90611814565b6111f6816113f1565b50565b6003546040517f70a082310000000000000000000000000000000000000000000000000000000081526000916001600160a01b0316906370a08231906112439030906004016116af565b60206040518083038186803b15801561125b57600080fd5b505afa15801561126f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112939190611676565b9050808211156113275760035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906112cf90869085906004016116e7565b602060405180830381600087803b1580156112e957600080fd5b505af11580156112fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611321919061163e565b506113ad565b60035460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061135990869086906004016116e7565b602060405180830381600087803b15801561137357600080fd5b505af1158015611387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ab919061163e565b505b505050565b6113ba611459565b6001600160a01b03166113cb610750565b6001600160a01b03161461073c5760405162461bcd60e51b815260040161055c90611871565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b50805460008255906000526020600020908101906111f691905b8082111561148b5760008155600101611477565b5090565b6000602082840312156114a0578081fd5b81356001600160a01b038116811461076b578182fd5b600080602083850312156114c8578081fd5b823567ffffffffffffffff808211156114df578283fd5b818501915085601f8301126114f2578283fd5b813581811115611500578384fd5b8660208083028501011115611513578384fd5b60209290920196919550909350505050565b60006020808385031215611537578182fd5b823567ffffffffffffffff81111561154d578283fd5b8301601f8101851361155d578283fd5b803561157061156b82611923565b6118f2565b818152838101908385018584028501860189101561158c578687fd5b8694505b838510156115ae578035835260019490940193918501918501611590565b50979650505050505050565b600060208083850312156115cc578182fd5b825167ffffffffffffffff8111156115e2578283fd5b8301601f810185136115f2578283fd5b805161160061156b82611923565b818152838101908385018584028501860189101561161c578687fd5b8694505b838510156115ae578051835260019490940193918501918501611620565b60006020828403121561164f578081fd5b8151801515811461076b578182fd5b60006020828403121561166f578081fd5b5035919050565b600060208284031215611687578081fd5b5051919050565b600080604083850312156116a0578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6000602082528260208301527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611738578081fd5b60208302808560408501379190910160400190815292915050565b6020808252825182820181905260009190848201906040850190845b8181101561178b5783518352928401929184019160010161176f565b50909695505050505050565b6020808252825482820181905260008481528281209092916040850190845b8181101561178b578354835260019384019392850192016117b6565b901515815260200190565b60208082526018908201527f464f453a20496e76616c696420746f6b656e20696e6465780000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f464f453a20596f7572204e4654206973206e6f7420486973746f7069616e212e604082015260600190565b90815260200190565b918252602082015260400190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561191b5761191b6119fd565b604052919050565b600067ffffffffffffffff82111561193d5761193d6119fd565b5060209081020190565b6000821982111561195a5761195a6119e7565b500190565b60008261197a57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611999576119996119e7565b500290565b6000828210156119b0576119b06119e7565b500390565b6000816119c4576119c46119e7565b506000190190565b60006000198214156119e0576119e06119e7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201cf6d84f39abf60b2842e50e0f37248193b56287948f34bcb5ec5878661b25e164736f6c63430008010033";

type FountainOfEraConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FountainOfEraConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FountainOfEra__factory extends ContractFactory {
  constructor(...args: FountainOfEraConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _eraAllocatorAddress: PromiseOrValue<string>,
    _histopiaNFT: PromiseOrValue<string>,
    _eraPerBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FountainOfEra> {
    return super.deploy(
      _eraAllocatorAddress,
      _histopiaNFT,
      _eraPerBlock,
      overrides || {}
    ) as Promise<FountainOfEra>;
  }
  override getDeployTransaction(
    _eraAllocatorAddress: PromiseOrValue<string>,
    _histopiaNFT: PromiseOrValue<string>,
    _eraPerBlock: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _eraAllocatorAddress,
      _histopiaNFT,
      _eraPerBlock,
      overrides || {}
    );
  }
  override attach(address: string): FountainOfEra {
    return super.attach(address) as FountainOfEra;
  }
  override connect(signer: Signer): FountainOfEra__factory {
    return super.connect(signer) as FountainOfEra__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FountainOfEraInterface {
    return new utils.Interface(_abi) as FountainOfEraInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FountainOfEra {
    return new Contract(address, _abi, signerOrProvider) as FountainOfEra;
  }
}
