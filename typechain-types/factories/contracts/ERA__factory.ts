/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERA, ERAInterface } from "../../contracts/ERA";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mintAccessor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool",
      },
    ],
    name: "changeMintAccessor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEraContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "EraContract",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawShare",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020016822a920903a37b5b2b760b91b8152506040518060400160405280600381526020016245524160e81b8152508160039080519060200190620000689291906200010a565b5080516200007e9060049060208401906200010a565b5050506200009b62000095620000b460201b60201c565b620000b8565b6005805460ff60a01b1916600960a11b179055620001ed565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011890620001b0565b90600052602060002090601f0160209004810192826200013c576000855562000187565b82601f106200015757805160ff191683800117855562000187565b8280016001018555821562000187579182015b82811115620001875782518255916020019190600101906200016a565b506200019592915062000199565b5090565b5b808211156200019557600081556001016200019a565b600281046001821680620001c557607f821691505b60208210811415620001e757634e487b7160e01b600052602260045260246000fd5b50919050565b610f5f80620001fd6000396000f3fe608060405234801561001057600080fd5b50600436106100fc5760003560e01c806303c171721461010157806306fdde0314610116578063095ea7b31461013457806318160ddd1461015457806323b872dd14610169578063313ce5671461017c578063395093511461019157806340c10f19146101a457806370a08231146101b7578063715018a6146101ca5780638da5cb5b146101d257806395d89b41146101e75780639dc29fac146101ef578063a457c2d714610202578063a9059cbb14610215578063d102de2814610228578063dd62ed3e14610230578063f1f68d6e14610243578063f2fde38b14610256578063f46eccc414610269575b600080fd5b61011461010f366004610aa5565b61027c565b005b61011e6102c2565b60405161012b9190610aed565b60405180910390f35b610147610142366004610aa5565b610354565b60405161012b9190610ae2565b61015c610376565b60405161012b9190610e72565b610147610177366004610a30565b61037c565b6101846103aa565b60405161012b9190610e7b565b61014761019f366004610aa5565b6103ba565b6101146101b2366004610aa5565b6103e6565b61015c6101c53660046109dd565b61041f565b61011461043e565b6101da610452565b60405161012b9190610ace565b61011e610461565b6101146101fd366004610aa5565b610470565b610147610210366004610aa5565b61047a565b610147610223366004610aa5565b6104c2565b6101da6104da565b61015c61023e3660046109fe565b6104de565b610114610251366004610a6b565b610509565b6101146102643660046109dd565b61053c565b6101476102773660046109dd565b610576565b3360009081526006602052604090205460ff166102b45760405162461bcd60e51b81526004016102ab90610dc9565b60405180910390fd5b6102be82826103e6565b5050565b6060600380546102d190610eb8565b80601f01602080910402602001604051908101604052809291908181526020018280546102fd90610eb8565b801561034a5780601f1061031f5761010080835404028352916020019161034a565b820191906000526020600020905b81548152906001019060200180831161032d57829003601f168201915b5050505050905090565b60008061035f61058b565b905061036c81858561058f565b5060019392505050565b60025490565b60008061038761058b565b9050610394858285610643565b61039f85858561068d565b506001949350505050565b600554600160a01b900460ff1690565b6000806103c561058b565b905061036c8185856103d785896104de565b6103e19190610e89565b61058f565b3360009081526006602052604090205460ff166104155760405162461bcd60e51b81526004016102ab90610dc9565b6102be828261079f565b6001600160a01b0381166000908152602081905260409020545b919050565b610446610855565b6104506000610894565b565b6005546001600160a01b031690565b6060600480546102d190610eb8565b6102be82826108e6565b60008061048561058b565b9050600061049382866104de565b9050838110156104b55760405162461bcd60e51b81526004016102ab90610df6565b61039f828686840361058f565b6000806104cd61058b565b905061036c81858561068d565b3090565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610511610855565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b610544610855565b6001600160a01b03811661056a5760405162461bcd60e51b81526004016102ab90610bc5565b61057381610894565b50565b60066020526000908152604090205460ff1681565b3390565b6001600160a01b0383166105b55760405162461bcd60e51b81526004016102ab90610d85565b6001600160a01b0382166105db5760405162461bcd60e51b81526004016102ab90610c0b565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610636908590610e72565b60405180910390a3505050565b600061064f84846104de565b90506000198114610687578181101561067a5760405162461bcd60e51b81526004016102ab90610c4d565b610687848484840361058f565b50505050565b6001600160a01b0383166106b35760405162461bcd60e51b81526004016102ab90610d40565b6001600160a01b0382166106d95760405162461bcd60e51b81526004016102ab90610b40565b6106e48383836109c1565b6001600160a01b0383166000908152602081905260409020548181101561071d5760405162461bcd60e51b81526004016102ab90610c84565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610754908490610e89565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610f0a8339815191528460405161078c9190610e72565b60405180910390a36106878484846109c1565b6001600160a01b0382166107c55760405162461bcd60e51b81526004016102ab90610e3b565b6107d1600083836109c1565b80600260008282546107e39190610e89565b90915550506001600160a01b03821660009081526020819052604081208054839290610810908490610e89565b90915550506040516001600160a01b03831690600090600080516020610f0a83398151915290610841908590610e72565b60405180910390a36102be600083836109c1565b61085d61058b565b6001600160a01b031661086e610452565b6001600160a01b0316146104505760405162461bcd60e51b81526004016102ab90610cca565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661090c5760405162461bcd60e51b81526004016102ab90610cff565b610918826000836109c1565b6001600160a01b038216600090815260208190526040902054818110156109515760405162461bcd60e51b81526004016102ab90610b83565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610980908490610ea1565b90915550506040516000906001600160a01b03851690600080516020610f0a833981519152906109b1908690610e72565b60405180910390a36109c1836000845b505050565b80356001600160a01b038116811461043957600080fd5b6000602082840312156109ee578081fd5b6109f7826109c6565b9392505050565b60008060408385031215610a10578081fd5b610a19836109c6565b9150610a27602084016109c6565b90509250929050565b600080600060608486031215610a44578081fd5b610a4d846109c6565b9250610a5b602085016109c6565b9150604084013590509250925092565b60008060408385031215610a7d578182fd5b610a86836109c6565b915060208301358015158114610a9a578182fd5b809150509250929050565b60008060408385031215610ab7578182fd5b610ac0836109c6565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610b1957858101830151858201604001528201610afd565b81811115610b2a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601d908201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601390820152722737ba10309036b4b73a1030b1b1b2b9b9b7b960691b604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610e9c57610e9c610ef3565b500190565b600082821015610eb357610eb3610ef3565b500390565b600281046001821680610ecc57607f821691505b60208210811415610eed57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212201c0ba7b3dbec3b5fc6151e886ed8294390f6f6f42b4faef7f508fbf708420ec264736f6c63430008010033";

type ERAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERA__factory extends ContractFactory {
  constructor(...args: ERAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERA> {
    return super.deploy(overrides || {}) as Promise<ERA>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERA {
    return super.attach(address) as ERA;
  }
  override connect(signer: Signer): ERA__factory {
    return super.connect(signer) as ERA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERAInterface {
    return new utils.Interface(_abi) as ERAInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERA {
    return new Contract(address, _abi, signerOrProvider) as ERA;
  }
}
