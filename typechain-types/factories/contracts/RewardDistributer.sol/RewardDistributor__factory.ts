/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RewardDistributor,
  RewardDistributorInterface,
} from "../../../contracts/RewardDistributer.sol/RewardDistributor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_eraContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardAttester",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeInterval",
        type: "uint256",
      },
    ],
    name: "addReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "changeRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardAttester",
        type: "address",
      },
    ],
    name: "changeRewardAttester",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "changeRewardStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeInterval",
        type: "uint256",
      },
    ],
    name: "changeRewardTimeInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "distributeReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eraContract",
    outputs: [
      {
        internalType: "contract ERA",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rewardId",
        type: "uint256",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardAttester",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardData",
    outputs: [
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardsTypes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeInterval",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verifySign",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040527f3ccc00b5c1bb57abbe2317dc9a265996ce62d30877d124197a597666908f361a6005553480156200003657600080fd5b50604051620013e0380380620013e08339810160408190526200005991620001fe565b604051806040016040528060118152602001702932bbb0b9322234b9ba3934b13aba37b960791b815250604051806040016040528060018152602001603160f81b815250620000b7620000b16200015160201b60201c565b62000155565b815160208084019190912082519183019190912060e08290526101008190524660a0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f62000108818484620001a5565b6080523060601b60c052610120525050600180546001600160a01b039586166001600160a01b031991821617909155600280549490951693169290921790925550620002619050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008383834630604051602001620001c295949392919062000235565b6040516020818303038152906040528051906020012090509392505050565b80516001600160a01b0381168114620001f957600080fd5b919050565b6000806040838503121562000211578182fd5b6200021c83620001e1565b91506200022c60208401620001e1565b90509250929050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60805160a05160c05160601c60e051610100516101205161112c620002b460003960006109450152600061098701526000610966015260006108c8015260006108f20152600061091c015261112c6000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c8063079f4913146100d557806311472bd8146100ea57806338174862146100fd57806356644760146101275780636f0ea3c81461013a578063715018a61461015a57806375c93bb91461016257806389535803146101755780638da5cb5b146101955780639dc9124b146101aa578063b7cd39d4146101bd578063c037263f146101c5578063c4a4f9f2146101d8578063ed24911d146101e0578063f2fde38b146101e8578063fd8919d2146101fb575b600080fd5b6100e86100e3366004610c9f565b61021d565b005b6100e86100f8366004610d30565b610415565b61011061010b366004610c5e565b610458565b60405161011e929190611087565b60405180910390f35b6100e8610135366004610cfd565b61047c565b61014d610148366004610c9f565b6104cc565b60405161011e9190610d99565b6100e86105d7565b6100e8610170366004610d30565b6105eb565b610188610183366004610c5e565b6106a8565b60405161011e9190610da4565b61019d6106d3565b60405161011e9190610d6c565b6100e86101b8366004610d30565b6106e3565b61019d610722565b6100e86101d3366004610c3d565b610731565b61019d61075b565b61018861076a565b6100e86101f6366004610c3d565b610779565b61020e610209366004610c87565b6107b3565b60405161011e93929190611095565b6002546001600160a01b031633146102505760405162461bcd60e51b815260040161024790610fe4565b60405180910390fd5b6003868154811061027157634e487b7160e01b600052603260045260246000fd5b600091825260209091206002600390920201015460ff166102a45760405162461bcd60e51b815260040161024790610e55565b83600387815481106102c657634e487b7160e01b600052603260045260246000fd5b60009182526020808320600160039093020191909101546001600160a01b03891683526004825260408084208b855290925291205461030591906110ad565b11156103235760405162461bcd60e51b815260040161024790611013565b6001600160a01b038516600090815260046020908152604080832089845290915290208490556103578686868686866104cc565b6103735760405162461bcd60e51b815260040161024790610f00565b600154600380546001600160a01b03909216916340c10f199188918a9081106103ac57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600001546040518363ffffffff1660e01b81526004016103db929190610d80565b600060405180830381600087803b1580156103f557600080fd5b505af1158015610409573d6000803e3d6000fd5b50505050505050505050565b61041d6107e9565b806003838154811061043f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600101819055505050565b60046020908152600092835260408084209091529082529020805460019091015482565b6104846107e9565b80600383815481106104a657634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201600201805460ff19169115159190911790555050565b6005546001600160a01b03861660009081526004602090815260408083208a845282528083206001015490519293849361052b93610510938c928e928d9101610dad565b60405160208183030381529060405280519060200120610828565b9050600061053b82878787610843565b6002549091506001600160a01b0380831691161461056b5760405162461bcd60e51b815260040161024790611044565b6001600160a01b0381166105915760405162461bcd60e51b815260040161024790610e23565b6001600160a01b03881660009081526004602090815260408083208c845290915281206001018054916105c3836110c5565b9091555060019a9950505050505050505050565b6105df6107e9565b6105e9600061086b565b565b6105f36107e9565b60408051606081018252928352602083019182526001908301818152600380549283018155600081905293517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b929094029182019390935590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c82015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d909101805460ff1916911515919091179055565b6001600160a01b03919091166000908152600460209081526040808320938352929052206001015490565b6000546001600160a01b03165b90565b6106eb6107e9565b806003838154811061070d57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201555050565b6002546001600160a01b031681565b6107396107e9565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b60006107746108bb565b905090565b6107816107e9565b6001600160a01b0381166107a75760405162461bcd60e51b815260040161024790610eba565b6107b08161086b565b50565b600381815481106107c357600080fd5b600091825260209091206003909102018054600182015460029092015490925060ff1683565b6107f16109b2565b6001600160a01b03166108026106d3565b6001600160a01b0316146105e95760405162461bcd60e51b815260040161024790610faf565b600061083b6108356108bb565b836109b6565b90505b919050565b6000806000610854878787876109e9565b9150915061086181610abf565b5095945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561091457507f000000000000000000000000000000000000000000000000000000000000000046145b1561094057507f00000000000000000000000000000000000000000000000000000000000000006106e0565b6109ab7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610bec565b90506106e0565b3390565b600082826040516020016109cb929190610d51565b60405160208183030381529060405280519060200120905092915050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115610a165750600090506003610ab6565b8460ff16601b14158015610a2e57508460ff16601c14155b15610a3f5750600090506004610ab6565b600060018787878760405160008152602001604052604051610a649493929190610e05565b6020604051602081039080840390855afa158015610a86573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610aaf57600060019250925050610ab6565b9150600090505b94509492505050565b6000816004811115610ae157634e487b7160e01b600052602160045260246000fd5b1415610aec576107b0565b6001816004811115610b0e57634e487b7160e01b600052602160045260246000fd5b1415610b2c5760405162461bcd60e51b815260040161024790610e23565b6002816004811115610b4e57634e487b7160e01b600052602160045260246000fd5b1415610b6c5760405162461bcd60e51b815260040161024790610e83565b6003816004811115610b8e57634e487b7160e01b600052602160045260246000fd5b1415610bac5760405162461bcd60e51b815260040161024790610f2b565b6004816004811115610bce57634e487b7160e01b600052602160045260246000fd5b14156107b05760405162461bcd60e51b815260040161024790610f6d565b60008383834630604051602001610c07959493929190610dd9565b6040516020818303038152906040528051906020012090509392505050565b80356001600160a01b038116811461083e57600080fd5b600060208284031215610c4e578081fd5b610c5782610c26565b9392505050565b60008060408385031215610c70578081fd5b610c7983610c26565b946020939093013593505050565b600060208284031215610c98578081fd5b5035919050565b60008060008060008060c08789031215610cb7578182fd5b86359550610cc760208801610c26565b945060408701359350606087013560ff81168114610ce3578283fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215610d0f578182fd5b8235915060208301358015158114610d25578182fd5b809150509250929050565b60008060408385031215610d42578182fd5b50508035926020909101359150565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b60208082526018908201527745434453413a20696e76616c6964207369676e617475726560401b604082015260600190565b602080825260149082015273526577617264206973206e6f742061637469766560601b604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260119082015270496e76616c6964207369676e617475726560781b604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601590820152742737ba1030903932bbb0b9321030ba3a32b9ba32b960591b604082015260600190565b60208082526017908201527614995dd85c99081a5cc81b9bdd081c9958591e481e595d604a1b604082015260600190565b60208082526023908201527f646973747269627574655265776172643a20696e76616c6964207369676e617460408201526275726560e81b606082015260800190565b918252602082015260400190565b92835260208301919091521515604082015260600190565b600082198211156110c0576110c06110e0565b500190565b60006000198214156110d9576110d96110e0565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122082bcfb0b4f3169272ed3f8c9aa9470c756c254d46e6b7aa0b7ead6ba2359b6ca64736f6c63430008010033";

type RewardDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardDistributor__factory extends ContractFactory {
  constructor(...args: RewardDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _eraContract: PromiseOrValue<string>,
    _rewardAttester: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardDistributor> {
    return super.deploy(
      _eraContract,
      _rewardAttester,
      overrides || {}
    ) as Promise<RewardDistributor>;
  }
  override getDeployTransaction(
    _eraContract: PromiseOrValue<string>,
    _rewardAttester: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _eraContract,
      _rewardAttester,
      overrides || {}
    );
  }
  override attach(address: string): RewardDistributor {
    return super.attach(address) as RewardDistributor;
  }
  override connect(signer: Signer): RewardDistributor__factory {
    return super.connect(signer) as RewardDistributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardDistributorInterface {
    return new utils.Interface(_abi) as RewardDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardDistributor {
    return new Contract(address, _abi, signerOrProvider) as RewardDistributor;
  }
}
